image: node:18.17.0

install:
  stage: .pre
  rules:
    - if: $CI_PROJECT_PATH == 'Luzilab/epsinyx/bot-discord' && $CI_COMMIT_BRANCH == 'main'
      changes:
        - src/**/*
        - package.json
        - package-lock.json
  cache:
    paths:
      - .cache/npm
  script:
    - &npm_install
      npm install --quiet --no-progress --cache=.cache/npm

build:
  stage: build
  rules:
    - if: $CI_PROJECT_PATH == 'Luzilab/epsinyx/bot-discord' && $CI_COMMIT_BRANCH == 'main'
      changes:
        - src/**/*
        - package.json
        - package-lock.json
  needs:
    - install
  cache: &pull_cache
    policy: pull
    paths:
      - .cache/npm
  script:
    - *npm_install
    - &build_bot
        npx tsc
  artifacts:
    paths:
      - dist/
      - package.json
      - package-lock.json
      - .env

build-docker-image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  rules:
    - if: $CI_PROJECT_PATH == 'Luzilab/epsinyx/bot-discord' && $CI_COMMIT_BRANCH == 'main'
      changes:
        - src/**/*
        - package.json
        - package-lock.json
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

docs-update:
  stage: deploy
  rules:
    - if: $CI_PROJECT_PATH == 'Luzilab/epsinyx/bot-discord' && $CI_COMMIT_BRANCH == 'main'
      changes:
        - docs/**/*
  script:
    - curl -X POST --fail -F token=$DOCS_CI_UPDATE -F ref=main https://gitlab.com/api/v4/projects/46789296/trigger/pipeline
